name: SmallAmp
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  reponame: ${{github.event.repository.name}}
  project_baseline: Roassal3
  project_directory: src
  iteration: 3


on:
  workflow_dispatch:
    inputs:
      testClasses:
        description: 'TestClasses to amplify (comma separated) empty-> all'
        required: false
        default: ''
      mode:
        description: 'mode (dspot, dspotFast, dspotFastRank)'
        required: true
        default: 'dspotFast'
      parallel_jobs:         
        description: 'Max number of all parallel jobs'
        required: true
        default: '8'
      maxInputs:
        description: 'Number of test variant per original test'
        required: true
        default: '10'
      timeBudget:
        description: 'Number of minutes as time budget (0 means no limit)'
        required: true
        default: '0'        
jobs:
  MatrixBuild:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.result }}
    steps:
      - name: configurations 
        run: | 
          echo "testClasses -> ${{github.event.inputs.testClasses}}"
          echo "mode -> ${{github.event.inputs.mode}}"
          echo "parallel_jobs -> ${{github.event.inputs.parallel_jobs}}"
          echo "maxInputs -> ${{github.event.inputs.maxInputs}}"
          echo "timeBudget -> ${{github.event.inputs.timeBudget}}"          
      - id: set-matrix
        uses: actions/github-script@v4
        env:
          testClasses: ${{ github.event.inputs.testClasses }}
          parallel_jobs: ${{ github.event.inputs.parallel_jobs }}
        with:
          script: |
            l = parseInt(process.env.parallel_jobs)
            if(process.env.testClasses){
              if (process.env.testClasses.split(',').length < l )
                l = process.env.testClasses.split(',').length
            }
            a = Array.from({length: l}, (x, i) => {a:i});
            var o = {jobs: a};
            return o
          
  TestAmplification: 
    needs: MatrixBuild
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.MatrixBuild.outputs.matrix)}}
#        portion: [1 , 2, 3, 4, 5, 6, 7, 8] # Change me if you like to run in parallel. The content of array is not important, just the length
    name: Job number ${{ strategy.job-index }}
    steps:
      - uses: actions/checkout@v2
        with:
           fetch-depth: 0
      - uses: mabdi/smallamp-action@main
        with:
          action: setup
      - uses: mabdi/smallamp-action@main
        with:
          action: amplify
        env:
          SMALLAMP_PORTION: ${{ strategy.job-index }} 
          SMALLAMP_ALLJOBS: ${{ strategy.job-total }}
          SMALLAMP_iteration: ${{ env.iteration }}
          SMALLAMP_maxInputs: ${{ github.event.inputs.maxInputs }}
          SMALLAMP_mode: ${{ github.event.inputs.mode }}  
          SMALLAMP_timeBudget: ${{ github.event.inputs.timeBudget }}
          SMALLAMP_testClasses: ${{ github.event.inputs.testClasses }}

  TestAmplificationPush:
    runs-on: ubuntu-latest
    needs: TestAmplification
    steps:
      - uses: actions/checkout@v2
        with:
           fetch-depth: 0
      - uses: mabdi/smallamp-action@main
        with:
          action: setup
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ env.PHARO_HOME }}
      - uses: mabdi/smallamp-action@main
        with:
          action: push
          github-token: ${{secrets.GITHUB_TOKEN}}
          
